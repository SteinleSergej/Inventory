// <auto-generated />
using System;
using Inventory.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventory.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240609072801_seedCategoryAndProductEntity")]
    partial class seedCategoryAndProductEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory.Domain.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60ea3bb3-ae87-49ea-a6f5-c2420d6a33d5"),
                            Name = "Computers"
                        },
                        new
                        {
                            Id = new Guid("a1849836-50ca-412c-9034-2a8dcab07d58"),
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = new Guid("5b5e3648-09a2-4572-883f-2d2e99486de6"),
                            Name = "Storage Devices"
                        });
                });

            modelBuilder.Entity("Inventory.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42992dcf-53f9-4a94-8976-cfaea71a76d8"),
                            CategoryId = new Guid("60ea3bb3-ae87-49ea-a6f5-c2420d6a33d5"),
                            Description = "High performance gaming laptop with advanced cooling system.",
                            Name = "Gaming Laptop",
                            Price = 1499.99,
                            QuantityInStock = 10
                        },
                        new
                        {
                            Id = new Guid("764a833a-7d3c-4de4-9c39-69cc0c1dcf9a"),
                            CategoryId = new Guid("a1849836-50ca-412c-9034-2a8dcab07d58"),
                            Description = "Ergonomic wireless mouse with adjustable DPI for precision control.",
                            Name = "Wireless Mouse",
                            Price = 29.989999999999998,
                            QuantityInStock = 50
                        },
                        new
                        {
                            Id = new Guid("87ee11b9-136b-41bc-9ae8-374b7b5f83d2"),
                            CategoryId = new Guid("5b5e3648-09a2-4572-883f-2d2e99486de6"),
                            Description = "Portable and high-speed external SSD, 1TB capacity.",
                            Name = "External SSD",
                            Price = 199.99000000000001,
                            QuantityInStock = 30
                        });
                });

            modelBuilder.Entity("Inventory.Domain.Product", b =>
                {
                    b.HasOne("Inventory.Domain.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
